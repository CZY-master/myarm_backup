// Generated by gencpp from file arm_control_tcp/ClearError.msg
// DO NOT EDIT!


#ifndef ARM_CONTROL_TCP_MESSAGE_CLEARERROR_H
#define ARM_CONTROL_TCP_MESSAGE_CLEARERROR_H

#include <ros/service_traits.h>


#include <arm_control_tcp/ClearErrorRequest.h>
#include <arm_control_tcp/ClearErrorResponse.h>


namespace arm_control_tcp
{

struct ClearError
{

typedef ClearErrorRequest Request;
typedef ClearErrorResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ClearError
} // namespace arm_control_tcp


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::arm_control_tcp::ClearError > {
  static const char* value()
  {
    return "ca16cfbd5443ad97f6cc7ffd6bb67292";
  }

  static const char* value(const ::arm_control_tcp::ClearError&) { return value(); }
};

template<>
struct DataType< ::arm_control_tcp::ClearError > {
  static const char* value()
  {
    return "arm_control_tcp/ClearError";
  }

  static const char* value(const ::arm_control_tcp::ClearError&) { return value(); }
};


// service_traits::MD5Sum< ::arm_control_tcp::ClearErrorRequest> should match
// service_traits::MD5Sum< ::arm_control_tcp::ClearError >
template<>
struct MD5Sum< ::arm_control_tcp::ClearErrorRequest>
{
  static const char* value()
  {
    return MD5Sum< ::arm_control_tcp::ClearError >::value();
  }
  static const char* value(const ::arm_control_tcp::ClearErrorRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::arm_control_tcp::ClearErrorRequest> should match
// service_traits::DataType< ::arm_control_tcp::ClearError >
template<>
struct DataType< ::arm_control_tcp::ClearErrorRequest>
{
  static const char* value()
  {
    return DataType< ::arm_control_tcp::ClearError >::value();
  }
  static const char* value(const ::arm_control_tcp::ClearErrorRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::arm_control_tcp::ClearErrorResponse> should match
// service_traits::MD5Sum< ::arm_control_tcp::ClearError >
template<>
struct MD5Sum< ::arm_control_tcp::ClearErrorResponse>
{
  static const char* value()
  {
    return MD5Sum< ::arm_control_tcp::ClearError >::value();
  }
  static const char* value(const ::arm_control_tcp::ClearErrorResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::arm_control_tcp::ClearErrorResponse> should match
// service_traits::DataType< ::arm_control_tcp::ClearError >
template<>
struct DataType< ::arm_control_tcp::ClearErrorResponse>
{
  static const char* value()
  {
    return DataType< ::arm_control_tcp::ClearError >::value();
  }
  static const char* value(const ::arm_control_tcp::ClearErrorResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ARM_CONTROL_TCP_MESSAGE_CLEARERROR_H
