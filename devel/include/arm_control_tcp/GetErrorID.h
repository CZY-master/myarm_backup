// Generated by gencpp from file arm_control_tcp/GetErrorID.msg
// DO NOT EDIT!


#ifndef ARM_CONTROL_TCP_MESSAGE_GETERRORID_H
#define ARM_CONTROL_TCP_MESSAGE_GETERRORID_H

#include <ros/service_traits.h>


#include <arm_control_tcp/GetErrorIDRequest.h>
#include <arm_control_tcp/GetErrorIDResponse.h>


namespace arm_control_tcp
{

struct GetErrorID
{

typedef GetErrorIDRequest Request;
typedef GetErrorIDResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetErrorID
} // namespace arm_control_tcp


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::arm_control_tcp::GetErrorID > {
  static const char* value()
  {
    return "15273c96ecb6b320e7c1e60e17abe5ab";
  }

  static const char* value(const ::arm_control_tcp::GetErrorID&) { return value(); }
};

template<>
struct DataType< ::arm_control_tcp::GetErrorID > {
  static const char* value()
  {
    return "arm_control_tcp/GetErrorID";
  }

  static const char* value(const ::arm_control_tcp::GetErrorID&) { return value(); }
};


// service_traits::MD5Sum< ::arm_control_tcp::GetErrorIDRequest> should match
// service_traits::MD5Sum< ::arm_control_tcp::GetErrorID >
template<>
struct MD5Sum< ::arm_control_tcp::GetErrorIDRequest>
{
  static const char* value()
  {
    return MD5Sum< ::arm_control_tcp::GetErrorID >::value();
  }
  static const char* value(const ::arm_control_tcp::GetErrorIDRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::arm_control_tcp::GetErrorIDRequest> should match
// service_traits::DataType< ::arm_control_tcp::GetErrorID >
template<>
struct DataType< ::arm_control_tcp::GetErrorIDRequest>
{
  static const char* value()
  {
    return DataType< ::arm_control_tcp::GetErrorID >::value();
  }
  static const char* value(const ::arm_control_tcp::GetErrorIDRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::arm_control_tcp::GetErrorIDResponse> should match
// service_traits::MD5Sum< ::arm_control_tcp::GetErrorID >
template<>
struct MD5Sum< ::arm_control_tcp::GetErrorIDResponse>
{
  static const char* value()
  {
    return MD5Sum< ::arm_control_tcp::GetErrorID >::value();
  }
  static const char* value(const ::arm_control_tcp::GetErrorIDResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::arm_control_tcp::GetErrorIDResponse> should match
// service_traits::DataType< ::arm_control_tcp::GetErrorID >
template<>
struct DataType< ::arm_control_tcp::GetErrorIDResponse>
{
  static const char* value()
  {
    return DataType< ::arm_control_tcp::GetErrorID >::value();
  }
  static const char* value(const ::arm_control_tcp::GetErrorIDResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ARM_CONTROL_TCP_MESSAGE_GETERRORID_H
