// Generated by gencpp from file arm_control_tcp/EnableRobot.msg
// DO NOT EDIT!


#ifndef ARM_CONTROL_TCP_MESSAGE_ENABLEROBOT_H
#define ARM_CONTROL_TCP_MESSAGE_ENABLEROBOT_H

#include <ros/service_traits.h>


#include <arm_control_tcp/EnableRobotRequest.h>
#include <arm_control_tcp/EnableRobotResponse.h>


namespace arm_control_tcp
{

struct EnableRobot
{

typedef EnableRobotRequest Request;
typedef EnableRobotResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct EnableRobot
} // namespace arm_control_tcp


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::arm_control_tcp::EnableRobot > {
  static const char* value()
  {
    return "ca16cfbd5443ad97f6cc7ffd6bb67292";
  }

  static const char* value(const ::arm_control_tcp::EnableRobot&) { return value(); }
};

template<>
struct DataType< ::arm_control_tcp::EnableRobot > {
  static const char* value()
  {
    return "arm_control_tcp/EnableRobot";
  }

  static const char* value(const ::arm_control_tcp::EnableRobot&) { return value(); }
};


// service_traits::MD5Sum< ::arm_control_tcp::EnableRobotRequest> should match
// service_traits::MD5Sum< ::arm_control_tcp::EnableRobot >
template<>
struct MD5Sum< ::arm_control_tcp::EnableRobotRequest>
{
  static const char* value()
  {
    return MD5Sum< ::arm_control_tcp::EnableRobot >::value();
  }
  static const char* value(const ::arm_control_tcp::EnableRobotRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::arm_control_tcp::EnableRobotRequest> should match
// service_traits::DataType< ::arm_control_tcp::EnableRobot >
template<>
struct DataType< ::arm_control_tcp::EnableRobotRequest>
{
  static const char* value()
  {
    return DataType< ::arm_control_tcp::EnableRobot >::value();
  }
  static const char* value(const ::arm_control_tcp::EnableRobotRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::arm_control_tcp::EnableRobotResponse> should match
// service_traits::MD5Sum< ::arm_control_tcp::EnableRobot >
template<>
struct MD5Sum< ::arm_control_tcp::EnableRobotResponse>
{
  static const char* value()
  {
    return MD5Sum< ::arm_control_tcp::EnableRobot >::value();
  }
  static const char* value(const ::arm_control_tcp::EnableRobotResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::arm_control_tcp::EnableRobotResponse> should match
// service_traits::DataType< ::arm_control_tcp::EnableRobot >
template<>
struct DataType< ::arm_control_tcp::EnableRobotResponse>
{
  static const char* value()
  {
    return DataType< ::arm_control_tcp::EnableRobot >::value();
  }
  static const char* value(const ::arm_control_tcp::EnableRobotResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ARM_CONTROL_TCP_MESSAGE_ENABLEROBOT_H
