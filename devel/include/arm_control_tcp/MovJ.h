// Generated by gencpp from file arm_control_tcp/MovJ.msg
// DO NOT EDIT!


#ifndef ARM_CONTROL_TCP_MESSAGE_MOVJ_H
#define ARM_CONTROL_TCP_MESSAGE_MOVJ_H

#include <ros/service_traits.h>


#include <arm_control_tcp/MovJRequest.h>
#include <arm_control_tcp/MovJResponse.h>


namespace arm_control_tcp
{

struct MovJ
{

typedef MovJRequest Request;
typedef MovJResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct MovJ
} // namespace arm_control_tcp


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::arm_control_tcp::MovJ > {
  static const char* value()
  {
    return "dd1dc62fc49b20e14b128b54ed54d2c0";
  }

  static const char* value(const ::arm_control_tcp::MovJ&) { return value(); }
};

template<>
struct DataType< ::arm_control_tcp::MovJ > {
  static const char* value()
  {
    return "arm_control_tcp/MovJ";
  }

  static const char* value(const ::arm_control_tcp::MovJ&) { return value(); }
};


// service_traits::MD5Sum< ::arm_control_tcp::MovJRequest> should match
// service_traits::MD5Sum< ::arm_control_tcp::MovJ >
template<>
struct MD5Sum< ::arm_control_tcp::MovJRequest>
{
  static const char* value()
  {
    return MD5Sum< ::arm_control_tcp::MovJ >::value();
  }
  static const char* value(const ::arm_control_tcp::MovJRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::arm_control_tcp::MovJRequest> should match
// service_traits::DataType< ::arm_control_tcp::MovJ >
template<>
struct DataType< ::arm_control_tcp::MovJRequest>
{
  static const char* value()
  {
    return DataType< ::arm_control_tcp::MovJ >::value();
  }
  static const char* value(const ::arm_control_tcp::MovJRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::arm_control_tcp::MovJResponse> should match
// service_traits::MD5Sum< ::arm_control_tcp::MovJ >
template<>
struct MD5Sum< ::arm_control_tcp::MovJResponse>
{
  static const char* value()
  {
    return MD5Sum< ::arm_control_tcp::MovJ >::value();
  }
  static const char* value(const ::arm_control_tcp::MovJResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::arm_control_tcp::MovJResponse> should match
// service_traits::DataType< ::arm_control_tcp::MovJ >
template<>
struct DataType< ::arm_control_tcp::MovJResponse>
{
  static const char* value()
  {
    return DataType< ::arm_control_tcp::MovJ >::value();
  }
  static const char* value(const ::arm_control_tcp::MovJResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ARM_CONTROL_TCP_MESSAGE_MOVJ_H
